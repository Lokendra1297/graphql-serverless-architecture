name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main  # Change to your default branch if necessary

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4  # Updated to v4

      - name: Set up Node.js
        uses: actions/setup-node@v4  # Updated to v4
        with:
          node-version: '20'  # Set to 20 to avoid future issues

      - name: Install Dependencies
        run: npm install

      - name: Deploy to AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'ap-south-1'
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        run: |
          npx serverless deploy
        continue-on-error: true  # Continue even if the deploy step fails

      - name: Get Previous Deployment Timestamp
        if: failure()  # Only run if the deploy step failed
        run: |
          echo "Deployment failed, retrieving last successful deployment timestamp..."
          npx serverless deploy list --stage dev --region ap-south-1 > deploy_list.txt
          # Extract the second most recent timestamp (last successful deployment)
          export ROLLBACK_TIMESTAMP=$(sed -n '3p' deploy_list.txt | awk '{print $2}')
          echo "Found rollback timestamp: $ROLLBACK_TIMESTAMP"
          echo "ROLLBACK_TIMESTAMP=$ROLLBACK_TIMESTAMP" >> $GITHUB_ENV  # Save to GitHub environment variable

      - name: Rollback on Failure
        if: failure()  # Only run if the deploy step failed
        run: |
          echo "Rolling back to previous successful deployment..."
          npx serverless rollback -t $ROLLBACK_TIMESTAMP
